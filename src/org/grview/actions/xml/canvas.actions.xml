<?xml version="1.0"?>

<!DOCTYPE ACTIONS SYSTEM "actions.dtd">

<!-- Asin's canvas action table        	                                   -->
<!-- Author Gustavo Braga         					                         -->

<!-- :tabSize=8:indentSize=8:noTabs=false:                                   -->
<!-- :folding=indent:collapseFolds=1:                                        -->

<!-- Actions are the 'glue' that binds menu item selections and keystrokes   -->
<!-- to Asin's APIs. For simplicity and compactness, they are written in    -->
<!-- the BeanShell scripting language.                                       -->

<ACTIONS>
<ACTION NAME="select">
	<CODE>
		canvas.setActiveTool(canvas.SELECT);
	</CODE>
</ACTION>
<ACTION NAME="successor">
	<CODE>
		canvas.setActiveTool(canvas.SUCCESSOR);
	</CODE>
</ACTION>
<ACTION NAME="alternative">
	<CODE>
		canvas.setActiveTool(canvas.ALTERNATIVE);
	</CODE>
</ACTION>
<ACTION NAME="lefthand">
	<CODE>
		canvas.setActiveTool(canvas.LEFT_SIDE);
	</CODE>
</ACTION>
<ACTION NAME="terminal">
	<CODE>
		canvas.setActiveTool(canvas.TERMINAL);
	</CODE>
</ACTION>
<ACTION NAME="nonterminal">
	<CODE>
		canvas.setActiveTool(canvas.N_TERMINAL);
	</CODE>
</ACTION>
<ACTION NAME="lambdaalternative">
	<CODE>
		canvas.setActiveTool(canvas.LAMBDA);
	</CODE>
</ACTION>
<ACTION NAME="initialnonterminal">
	<CODE>
		canvas.setActiveTool(canvas.START);
	</CODE>
</ACTION>
<ACTION NAME="text">
	<CODE>
		canvas.setActiveTool(canvas.LABEL);
	</CODE>
</ACTION>
<ACTION NAME="new_grammar_file">
	<CODE>
		
	</CODE>
</ACTION>
<ACTION NAME="delete">
	<CODE>
			org.grview.output.action.WidgetDeleteProvider wdp = new org.grview.output.action.WidgetDeleteProvider(canvas);
			if (wdp.isDeletionAllowed()) {
				wdp.deleteSelected();
			}
	</CODE>
</ACTION>
<ACTION NAME="new_lex_file">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="new_sem_file">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="new_project">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="open">
	<CODE>
	
	</CODE>
</ACTION>

<ACTION NAME="save">
	<CODE>
		ProjectManager.saveFile(canvas);
	</CODE>
</ACTION>
<ACTION NAME="saveall">
	<CODE>
		ProjectManager.saveAllFiles();
	</CODE>
</ACTION>
<ACTION NAME="undo">
	<CODE>
		VolatileStateManager vsm = canvas.getVolatileStateManager();
		if (vsm.hasNextUndo()) {
			vsm.undo();
		}
	</CODE>
</ACTION>
<ACTION NAME="redo">
	<CODE>
		VolatileStateManager vsm = canvas.getVolatileStateManager();
		if (vsm.hasNextRedo()) {
			vsm.redo();
		}
	</CODE>
</ACTION>
<ACTION NAME="build">
	<CODE>
		
	</CODE>
</ACTION>
<ACTION NAME="zoom+">
	<CODE>
		if (canvas.canZoomIn()) {
			canvas.setZoomFactor(canvas.getZoomFactor() * 1.1);
			canvas.validate();
		}
	</CODE>
</ACTION>
<ACTION NAME="zoom-">
	<CODE>
		if (canvas.canZoomOut()) {
			canvas.setZoomFactor(canvas.getZoomFactor() * 0.9);
			canvas.validate();
		}
	</CODE>
</ACTION>
<ACTION NAME="goLeft">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="goRight">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="goUp">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="goDown">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="goIn">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="goLast">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="goNext">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="print">
	<CODE>
		ComponentPrinter.printWidget(canvas);
	</CODE>
</ACTION>
<ACTION NAME="cut">
	<CODE>
		WidgetCopyPasteProvider  wcpp = new WidgetCopyPasteProvider(canvas);
		WidgetDeleteProvider wdp = new WidgetDeleteProvider(canvas);
		wcpp.cutSelected(wdp);
	</CODE>
</ACTION>
<ACTION NAME="copy">
	<CODE>
		WidgetCopyPasteProvider  wcpp = new WidgetCopyPasteProvider(canvas);
		wcpp.copySelected();
	</CODE>
</ACTION>
<ACTION NAME="paste">
	<CODE>
		WidgetCopyPasteProvider  wcpp = new WidgetCopyPasteProvider(canvas);
		wcpp.paste(null);
	</CODE>
</ACTION>
<ACTION NAME="new_view">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="buffer_options">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="options">
	<CODE>
	
	</CODE>
</ACTION>
<ACTION NAME="help">
	<CODE>
	
	</CODE>
</ACTION>
</ACTIONS>